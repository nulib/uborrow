// Generated by CoffeeScript 1.6.3
(function() {
  var UBorrow,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  UBorrow = (function() {
    function UBorrow(jQ, container) {
      var boomTabUrl, match;
      this.jQ = jQ;
      this.container = container;
      this.checkIfReady = __bind(this.checkIfReady, this);
      this.update = __bind(this.update, this);
      this.checkLocal = __bind(this.checkLocal, this);
      this.findScriptHost = __bind(this.findScriptHost, this);
      this.jQ(this.container).data('uborrow', this);
      this.locationFilter = this.jQ('#uborrow-shim').data('uborrow-filter');
      boomTabUrl = this.jQ(this.container).find('.EXLTabsRibbon .EXLTabBoomId').val();
      match = (boomTabUrl != null) && boomTabUrl.match(/rft\.isbn=([0-9X]+)/);
      this.isbn = (match != null) && match[1];
    }

    UBorrow.prototype.findScriptHost = function(extra) {
      return this.jQ('#uborrow-shim').data('uborrow-proxy') + extra;
    };

    UBorrow.prototype.checkLocal = function() {
      var query;
      console.log("Initiating availability check for " + this.isbn);
      if (this.container.find(".EXLLocationInfo" + this.locationFilter + " .EXLResultStatusAvailable").length === 0) {
        this.update('Checking ILL Status');
        console.log("Initiating uBorrow FindItem for " + this.isbn);
        query = $.param({
          tid: (new Date()).valueOf(),
          target: this.container.attr('id')
        });
        return this.jQ('head').append("<script src=\"" + (this.findScriptHost('findItem')) + "/ISBN/" + this.isbn + "?" + query + "\"></script>");
      } else {
        return console.log('Item is available. No FindItem check necessary.');
      }
    };

    UBorrow.prototype.update = function(content) {
      if (this.container.find('.EXLLocationInfo').length > 0) {
        if (this.container.find('span.uBorrowDisplay').length === 0) {
          this.container.find(".EXLLocationInfo" + this.locationFilter + " .EXLResultStatusNotAvailable").first().append('<span class="uBorrowDisplay"></span>');
        }
        if (content != null) {
          return this.container.find('span.uBorrowDisplay').html(content).prepend(' - ');
        }
      }
    };

    UBorrow.prototype.checkIfReady = function() {
      if (this.container.find('.EXLLocationInfo').length > 0) {
        return this.checkLocal();
      } else {
        return setTimeout(this.checkIfReady, 500);
      }
    };

    return UBorrow;

  })();

  $.fn.uBorrow = function() {
    var args, command, container, payload, _i, _len, _results;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    command = args[0], payload = args[1];
    switch (command) {
      case 'init':
        _results = [];
        for (_i = 0, _len = this.length; _i < _len; _i++) {
          container = this[_i];
          _results.push((function(container) {
            var uBorrow;
            uBorrow = new UBorrow($, $(container));
            if (uBorrow.isbn != null) {
              console.log("Initializing uBorrow for " + uBorrow.isbn);
              return uBorrow.checkIfReady();
            }
          })(container));
        }
        return _results;
        break;
      case 'update':
        return $(this).data('uborrow').update(payload);
    }
  };

  $(document).ready(function() {
    return $('.EXLResult').uBorrow('init');
  });

}).call(this);
